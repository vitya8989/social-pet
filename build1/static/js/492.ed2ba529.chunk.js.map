{"version":3,"file":"static/js/492.ed2ba529.chunk.js","mappings":"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","sources":["components/Main/Content/Dialogs/Dialogs.module.scss","webpack://social-pet/./src/components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages_wrapper.module.scss?e9a8","webpack://social-pet/./src/components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Users_messages.module.scss?5d76","webpack://social-pet/./src/components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Users_message/Users_message.module.scss?4241","components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Users_message/Users_message.jsx","webpack://social-pet/./src/components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Empty_message/Empty_message.module.scss?2db0","components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Empty_message/Empty_message.jsx","components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Users_messages.jsx","components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages/Users_messagesContainer.jsx","components/Main/Content/Dialogs/Users_messages_wrapper/Users_messages_wrapper.jsx","webpack://social-pet/./src/components/Main/Content/Dialogs/Users_list/Users_list.module.scss?8eb2","webpack://social-pet/./src/components/Main/Content/Dialogs/Users_list/User/User.module.scss?edae","components/Main/Content/Dialogs/Users_list/User/User.jsx","components/Main/Content/Dialogs/Users_list/Users_list.jsx","components/Main/Content/Dialogs/Users_list/Users_listContainer.jsx","components/Main/Content/Dialogs/Dialogs.jsx","components/Main/Content/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"users_messages_wrapper\":\"Users_messages_wrapper_users_messages_wrapper__hwUAT\"};","// extracted by mini-css-extract-plugin\nexport default {\"users_messages\":\"Users_messages_users_messages__awe73\",\"users_messages_panel\":\"Users_messages_users_messages_panel__1gIXU\",\"users_messages_textarea\":\"Users_messages_users_messages_textarea__+7H0h\"};","// extracted by mini-css-extract-plugin\nexport default {\"users_message\":\"Users_message_users_message__A8GPB\",\"incoming\":\"Users_message_incoming__GyQUD\",\"users_message_content\":\"Users_message_users_message_content__YfhTy\",\"users_message_text\":\"Users_message_users_message_text__Ivr+k\"};","import style from './Users_message.module.scss';\r\n\r\nconst Users_message = (props) => {\r\n    if (props.incoming) {\r\n        return (\r\n            <div className={`${style.users_message} ${style.incoming}`}>\r\n                <div className={`${style.users_message_content} ${style.incoming}`}>\r\n                    <img src={props.img} alt=\"\"/>\r\n                    <div className={style.users_message_text}>{props.text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={style.users_message}>\r\n                <div className={style.users_message_content}>\r\n                    <img src={props.img} alt=\"\"/>\r\n                    <div className={style.users_message_text}>{props.text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users_message;","// extracted by mini-css-extract-plugin\nexport default {\"empty_message\":\"Empty_message_empty_message__922wh\"};","import style from './Empty_message.module.scss';\r\n\r\nconst Empty_message = (props) => {\r\n    return (\r\n        <div className={style.empty_message}>\r\n            Здесь еще нет сообщений\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Empty_message;","import style from './Users_messages.module.scss';\r\nimport Users_message from \"./Users_message/Users_message\";\r\nimport Empty_message from \"./Empty_message/Empty_message\";\r\nimport React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../../../utils/validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.users_messages_panel}>\r\n            <Field component={Textarea} name={'message'} validate={[required, maxLength]} className={style.users_messages_textarea}/>\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm)\r\n\r\nconst Users_messages = (props) => {\r\n    let usersMessagesElements = props.dialogs.usersMessages.length > 0 ? props.dialogs.usersMessages.map((userMessage, index) => <Users_message text={userMessage.text} incoming={userMessage.incoming} img={userMessage.img} key={index}/>) : <Empty_message />;\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.message);\r\n    };\r\n\r\n    return (\r\n        <div className={style.users_messages}>\r\n                {usersMessagesElements}\r\n                <NewMessageReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users_messages;","import {AMActionCreator} from \"../../../../../../redux/dialogs-reducer\";\r\nimport Users_messages from \"./Users_messages\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(AMActionCreator(text));\r\n        },\r\n    }\r\n}\r\n\r\nconst Users_messagesContainer = connect(mapStateToProps, mapDispatchToProps)(Users_messages);\r\n\r\nexport default Users_messagesContainer;","import style from './Users_messages_wrapper.module.scss';\r\nimport Users_messagesContainer from \"./Users_messages/Users_messagesContainer\";\r\nimport Messages_default from \"./Messages_default/Messages_default\";\r\n\r\nconst Users_messages_wrapper = (props) => {\r\n\r\n    let dialogNotChosen = true\r\n    let dialogChosen = true;\r\n\r\n    return (\r\n        <div className={style.users_messages_wrapper}>\r\n            {/*{dialogNotChosen && <Messages_default />}*/}\r\n            {dialogChosen && <Users_messagesContainer />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users_messages_wrapper;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_list_users__eYClX\"};","// extracted by mini-css-extract-plugin\nexport default {\"user_wr\":\"User_user_wr__kFFfH\",\"user\":\"User_user__fTetq\",\"active\":\"User_active__UMK4j\",\"user_row\":\"User_user_row__KJYCb\",\"user_img\":\"User_user_img__gy52d\",\"user_name\":\"User_user_name__iIfD8\"};","import style from './User.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst setActiveUser = ({ isActive }) => style.user + \" \" + (isActive ? style.active : \"\");\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={style.user_wr}>\r\n            <NavLink to={\"/dialogs/\" + props.id}  className={setActiveUser} >\r\n                <div className={style.user_row}>\r\n                    <img src={props.img} alt=\"\" className={style.user_img}/>\r\n                    <div className={style.user_name}>{props.name}</div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import style from './Users_list.module.scss';\r\nimport User from \"./User/User\";\r\n\r\nconst Users_list = (props) => {\r\n    let usersElements = props.users.map((user, index) => <User name={user.name} id={user.id} img={user.img} key={index}/>);\r\n    return (\r\n        <div className={style.users}>\r\n            {usersElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users_list;","import {connect} from \"react-redux\";\r\nimport Users_list from \"./Users_list\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.dialogs.users,\r\n    }\r\n}\r\n\r\nconst Users_listContainer = connect(mapStateToProps)(Users_list);\r\n\r\nexport default Users_listContainer;","import style from './Dialogs.module.scss';\r\nimport Users_messages_wrapper from \"./Users_messages_wrapper/Users_messages_wrapper\";\r\nimport Users_listContainer from \"./Users_list/Users_listContainer\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    if (!props.isLogin) return <Navigate to={'/login'} />;\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <Users_listContainer />\r\n            <Users_messages_wrapper />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport default compose(withAuthRedirect)(Dialogs);"],"names":["props","incoming","className","style","src","img","alt","text","maxLength","maxLengthCreator","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","usersMessagesElements","dialogs","usersMessages","length","map","userMessage","index","formData","sendMessage","message","connect","state","dispatch","AMActionCreator","Users_messages","setActiveUser","isActive","to","id","usersElements","users","user","Users_list","isLogin","compose","withAuthRedirect","Dialogs"],"sourceRoot":""}